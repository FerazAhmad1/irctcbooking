{"version":3,"file":"reserve_ticket.js","sourceRoot":"/","sources":["v1/controller/reserve_ticket.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response } from \"express\";\nimport reservation from \"../model/dbreservetickets\";\n\n\nexport const create_reserve_ticket = async (req: Request, res: Response) => {\n  console.log(\"fffffffffffffffffffffffffffffffffffffffffffffff\")\n  try {\n    console.log(\"req.bodyRRRRRRRRRRRRRRRRRRRRRRRRRRR\", req.body)\n    const response = await reservation.ticket_reservation(req.body, req.body.__user);\n    if (!response || response.error) {\n      throw {\n        message: response?.message || \"your model function is not working\"\n      }\n    }\n    res.status(200).json(response)\n  } catch (error) {\n    const err = error as any;\n    console.log(err)\n    res.status(400).json({\n      error: true,\n      message: err.message || \"UNEXPECTED ERROR\",\n      data: {},\n    });\n  }\n};\n\nexport const get_all_ticket = async (req: Request, res: Response) => {\n  try {\n    let { page } = req.body\n    page = page * 1\n    const user = req.body.__user\n    const response = await reservation.get_all_ticket(user, page);\n    if (!response || response.error) {\n      throw {\n        message: response?.message || \"your model function is not working\"\n      }\n    }\n\n    res.status(200).json(response)\n\n  } catch (error) {\n    const err = error as any\n    res.status(400).json({\n      error: true,\n      message: err.message || \"UNEXPECTED ERROR\",\n      data: {}\n    });\n  }\n};\n\nexport const cancel_ticket = async (req: Request, res: Response) => {\n  try {\n    const user = req.body.__user;\n    const validate = req.body\n    const response = await reservation.cancel_ticket(validate, user)\n    if (!response || response.error) {\n      throw {\n        message: response?.message || \"your model function is not working\"\n      }\n    }\n\n    res.status(200).json(response)\n  } catch (error) {\n    const err = error as any;\n    res.status(400).json({\n      error: true,\n      message: err.message || \"UNEXPECTED ERROR\",\n      data: {},\n    });\n  }\n};\n"]}