{"version":3,"file":"traindb.js","sourceRoot":"/","sources":["v1/model/traindb.ts"],"names":[],"mappings":"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","sourcesContent":["import { appdb } from \"../model/appdb\";\nimport station_obj from \"./dbstation\";\nimport schedule_obj from \"./dbschedule\";\nimport { create_date } from \"../helper.ts/helpfn\";\ninterface train {\n  uniquefield: any,\n  uniquefieldname: string,\n  field: string\n}\n\nclass traindb extends appdb {\n  constructor() {\n    super();\n    this.table = \"train\"\n  }\n\n  async get_train(train_data: train) {\n    try {\n\n      this.where = `WHERE \"${train_data.uniquefieldname}\"='${train_data.uniquefield}'`\n\n      const train = await this.select(this.table, train_data.field, this.where, '', '');\n\n      return train\n\n    } catch (error) {\n      console.log(error)\n      return error\n    }\n  }\n\n  async search_train(req_body: any, user: any) {\n    try {\n      const validate = req_body\n      let page = validate.page * 1\n      // need station id of source and destination\n      const from_station_query = station_obj.search_station({ id: validate.from_station_id }, \"*\", 1)\n      const destination_station_query = station_obj.search_station({ id: validate.to_station_id }, \"*\", 1)\n\n      const [[from_station], [to_staion]] = await Promise.all([from_station_query, destination_station_query]);\n      console.log(to_staion, from_station);\n      if (!from_station) {\n        throw { message: \" source station not found \" };\n      }\n      if (!to_staion) {\n        throw {\n          message: \"no destination station found\",\n        };\n      }\n      const from_station_id = from_station.id;\n      const to_staion_id = to_staion.id;\n      console.log(from_station, to_staion);\n      // fetch all trains that runs beatwean the station\n\n      const field = `s1.train_id as from_train_id,s1.minutes as from_minutes, s1.stop_order as from_stop_order,s2.train_id  as end_train_id,s2.minutes as end_minutes ,s2.stop_order as end_stop_order from schedule s1 JOIN schedule s2 ON s1.train_id=s2.train_id `;\n\n      const scheduledTrain = await schedule_obj.get_trains_from_source_to_destination(from_station_id, to_staion_id, field, page)\n      const day = new Date(validate.date_of_journey).getDay();\n\n      const trains_at_that_day = await Promise.all(\n        scheduledTrain.map(async (obj: any) => {\n          const train = await this.get_train({ uniquefield: obj.from_train_id, uniquefieldname: \"id\", field: `days,start_time,t_number ` });\n\n          const days = train[0].days;\n          const start_time = train[0].start_time;\n          const b = days[day] * 1 === 1;\n          const train_number = train[0].t_number;\n          console.log(b);\n          if (b) {\n            const [end_date_of_journey, end_time] = create_date(\n              validate.date_of_journey,\n              start_time,\n              obj.end_minutes * 1\n            );\n            return {\n              ...obj,\n              start_station_name: from_station.stn_name,\n              end_station_name: to_staion.stn_name,\n              start_date_of_journey: validate.date_of_journey,\n              start_time: start_time,\n              end_date_of_journey,\n              end_time,\n              train_number,\n            };\n          }\n          return {};\n        })\n      );\n\n      return {\n        error: false,\n        message: \"this is available train for your journey \",\n        data: trains_at_that_day,\n      };\n    } catch (error) {\n      throw error\n    }\n  }\n}\nconst train_obj = new traindb();\nexport default train_obj;\n"]}