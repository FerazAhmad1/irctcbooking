{"version":3,"file":"helpfn.js","sourceRoot":"/","sources":["v1/helper.ts/helpfn.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response, NextFunction } from \"express\";\nimport crypto from \"crypto\";\nimport nodemailer from \"nodemailer\";\nimport { promisify } from \"util\";\nimport jwt from \"jsonwebtoken\";\nimport user from \"../model/dbusers\";\nimport { rate_train_one, rate_train_two, rate_train_three } from \"../constants\";\nimport { getPreciseDistance } from \"geolib\";\nimport moment from \"moment\";\nimport { applyValidation } from \"./validation\";\n\ninterface CustomRequest extends Request {\n  user?: {\n    [index: string]: any;\n  };\n}\n\nexport const protect = async (\n  req: Request,\n  res: Response,\n  next: NextFunction\n) => {\n  try {\n    let token;\n    if (\n      req.headers.authorization &&\n      req.headers.authorization.startsWith(\"Bearer\")\n    ) {\n      token = req.headers.authorization.split(\" \")[1];\n    }\n    if (!token) {\n      throw {\n        message: \"please send token in headers\",\n      };\n    }\n    const decode: any = await promisify(jwt.verify)(\n      token,\n      process.env.JWT_SECRET || \"\"\n    );\n    if (!decode) {\n      throw {\n        message: \"Invalid user\",\n      };\n    }\n    const id = decode.id;\n\n    const dbuser = await user.getUser({ id });\n    if (dbuser.length === 0) {\n      throw { message: \"Invalid user\" };\n    }\n    (req as CustomRequest).user = dbuser[0];\n\n    next();\n  } catch (error) {\n    const err = error as any;\n    res.status(400).json({\n      error: true,\n      message: err.message,\n    });\n  }\n};\n\nexport const create_date = (\n  date: any,\n  time: string,\n  minutes_to_add: number\n) => {\n  console.log(date, time, minutes_to_add);\n  // Create the initial date object from dateStr\n  const initialDate = new Date(date);\n\n  // Parse the time string\n  const [hours, minutes, seconds] = time.split(\":\").map(Number);\n\n  // Set the time to the initial date object\n  initialDate.setHours(hours, minutes, seconds);\n\n  // Add the specified number of minutes\n  initialDate.setMinutes(initialDate.getMinutes() + minutes_to_add);\n  const addLeadingZero = (num: any) => (num * 1 < 10 ? `0${num}` : num);\n  console.log(\"sssfgdfgddfgdgfdgfwwwwwwwwwwwwwwwwww\", initialDate);\n  // Create the array with formatted values\n  let formatedDate = [\n    initialDate.getFullYear(),\n    addLeadingZero(initialDate.getMonth() + 1), // getMonth() is 0-based\n    addLeadingZero(initialDate.getDate()),\n  ].join(\"-\");\n  const formatedTime = [\n    addLeadingZero(initialDate.getHours()),\n    addLeadingZero(initialDate.getMinutes()),\n  ].join(\":\");\n  return [formatedDate, formatedTime];\n};\n\nconst check_timeLimit = (dateStr: any, timeStr: any) => {\n  try {\n    const initialDate: any = new Date(dateStr);\n    const [hours, minutes, seconds] = timeStr.split(\":\").map(Number);\n    initialDate.setHours(hours, minutes, seconds);\n    if (initialDate > new Date()) {\n      const current_date = new Date() as any;\n      let difference = (initialDate - current_date) / (1 * 60 * 60 * 1000);\n      console.log(difference);\n      if (difference >= 4) return true;\n      else {\n        throw {\n          message:\n            \"you can only get the ticket before three hours of train departure from source station\",\n        };\n      }\n    }\n\n    throw {\n      message: \"train  has been left source station\",\n    };\n  } catch (error) {\n    const err = error as any;\n    console.log(err.message);\n    throw err;\n  }\n};\n\nexport const restrict_to = (...allowed: any[]) => {\n  console.log();\n  return (req: any, res: any, next: NextFunction) => {\n    if (allowed.includes(req.user.role)) {\n      next();\n    } else {\n      res.status(401).json({\n        error: true,\n        message: \"you are not authorize to perform this action\",\n        data: {},\n      });\n    }\n  };\n};\n\nexport const calculate_amount = (\n  train_id: any,\n  num_of_customers: any,\n  minutes: any\n) => {\n  let rate = 4;\n  let id = train_id * 1;\n  if (id === 1) {\n    rate = rate_train_one;\n  } else if (id === 2) {\n    rate = rate_train_two;\n  } else if (id === 3) {\n    rate = rate_train_three;\n  }\n  console.log(\"AAAAAAAAAAAAAAAAAA\", num_of_customers, minutes, rate);\n  const amount = num_of_customers * minutes * rate;\n  return amount;\n};\n\nexport const validateDay = (\n  days: string,\n  date: string,\n  start_time: string,\n  total_minute: number\n) => {\n  console.log(days, date, start_time, total_minute);\n  let initialDate = new Date(date);\n  let day = initialDate.getDay();\n  const arr = date.split(\"-\");\n  let previous_date = new Date(date);\n  console.log(\"FFFertyrertretre\", previous_date);\n  const [hours, minutes, second] = start_time.split(\":\").map(Number);\n  initialDate.setHours(hours, minutes, second);\n\n  for (let i = day; i >= 0; i--) {\n    console.log(\n      \"DEFDEREDFDGFVCDFVCDFFVDFFCDFCXFCV\",\n      `${initialDate.getFullYear()}-${\n        initialDate.getMonth() + 1\n      }-${initialDate.getDate()}`\n    );\n    previous_date = new Date(initialDate);\n    console.log(previous_date);\n    initialDate.setMinutes(initialDate.getMinutes() + total_minute);\n    const a = (days[i] as any) * 1;\n    if (a === 1) {\n      if (initialDate.getDay() === day) return previous_date;\n    }\n\n    initialDate.setMinutes(initialDate.getMinutes() - total_minute - 1440);\n  }\n  return false;\n};\n\nexport const formatDateString = (dateString: Date, pattern: string): string =>\n  moment(dateString).format(pattern);\n\nexport const send_mail = async ({ reciever, html, subject, sender }: any) => {\n  try {\n    const transporter = nodemailer.createTransport({\n      host: process.env.EMAIL_HOST || \"smtp.gmail.com\",\n      port: parseInt(process.env.EMAIL_PORT || \"587\"),\n      secure: false,\n      auth: {\n        user: process.env.EMAIL_USER,\n        pass: process.env.EMAIL_PASSWORD,\n      },\n    });\n\n    const mailOption = {\n      from: `Feraz khan <${sender}>`,\n      to: reciever,\n      subject: subject,\n      html,\n    };\n    const response = await transporter.sendMail(mailOption);\n    return response;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const create_random_token = () => {\n  const random_token = crypto.randomBytes(32).toString(\"hex\");\n  const hashed_token = crypto\n    .createHash(\"sha256\")\n    .update(random_token)\n    .digest(\"hex\");\n  return [random_token, hashed_token];\n};\n\nexport const calculate_distance = (p1: any, p2: any) => {\n  const distance = getPreciseDistance(p1, p2, 1);\n  return distance;\n};\n\nexport const calculate_general_amount = (\n  train_type: string,\n  distance: any,\n  quantity = 1\n) => {\n  let rate = 0.4;\n  if (train_type === \"SF\") {\n    rate = 0.5;\n  } else if (train_type === \"EX\") {\n    rate = 0.4;\n  }\n\n  const amount = Math.floor(rate * (distance / 1000) * quantity);\n  return amount;\n};\n\nexport const validate_body = (schema: any) => {\n  return async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      const validate = await applyValidation(schema, req.body);\n      req.body = validate;\n      next();\n    } catch (error) {\n      const err = error as any;\n      res.status(400).json({\n        error: true,\n        message: err.message,\n        data: {},\n      });\n    }\n  };\n};\n"]}